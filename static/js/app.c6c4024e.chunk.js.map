{"version":3,"sources":["lib/assets/images/close.android.png","lib/assets/images/close.ios.png","../src/types.ts","../src/CountryService.ts","../src/CountryContext.ts","../src/ratio.ts","../src/CountryTheme.ts","../src/AnimatedModal.tsx","../src/CountryModalProvider.tsx","../src/CountryModal.tsx","../src/CloseButton.tsx","../src/HeaderModal.tsx","../src/CountryFilter.tsx","../src/Emoji.tsx","../src/Flag.tsx","../src/CountryText.tsx","../src/FlagButton.tsx","../src/CountryList.tsx","../src/CountryPicker.tsx","../src/index.tsx"],"names":["module","exports","CountryCodeList","countries"],"mappings":"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","file":"static/js/app.c6c4024e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/close.android.0d17e028.png\";","module.exports = __webpack_public_path__ + \"static/media/close.ios.81d829c3.png\";","export const CountryCodeList = [\n    'AF',\n    'AL',\n    'DZ',\n    'AS',\n    'AD',\n    'AO',\n    'AI',\n    'AQ',\n    'AG',\n    'AR',\n    'AM',\n    'AW',\n    'AU',\n    'AT',\n    'AZ',\n    'BS',\n    'BH',\n    'BD',\n    'BB',\n    'BY',\n    'BE',\n    'BZ',\n    'BJ',\n    'BM',\n    'BT',\n    'BO',\n    'BA',\n    'BW',\n    'BV',\n    'BR',\n    'IO',\n    'VG',\n    'BN',\n    'BG',\n    'BF',\n    'BI',\n    'KH',\n    'CM',\n    'CA',\n    'CV',\n    'BQ',\n    'KY',\n    'CF',\n    'TD',\n    'CL',\n    'CN',\n    'CX',\n    'CC',\n    'CO',\n    'KM',\n    'CK',\n    'CR',\n    'HR',\n    'CU',\n    'CW',\n    'CY',\n    'CZ',\n    'CD',\n    'DK',\n    'DJ',\n    'DM',\n    'DO',\n    'EC',\n    'EG',\n    'SV',\n    'GQ',\n    'ER',\n    'EE',\n    'SZ',\n    'ET',\n    'FK',\n    'FO',\n    'FJ',\n    'FI',\n    'FR',\n    'GF',\n    'PF',\n    'TF',\n    'GA',\n    'GM',\n    'GE',\n    'DE',\n    'GH',\n    'GI',\n    'GR',\n    'GL',\n    'GD',\n    'GP',\n    'GU',\n    'GT',\n    'GG',\n    'GN',\n    'GW',\n    'GY',\n    'HT',\n    'HM',\n    'HN',\n    'HU',\n    'IS',\n    'IN',\n    'ID',\n    'IR',\n    'IQ',\n    'IE',\n    'IM',\n    'IL',\n    'IT',\n    'CI',\n    'JM',\n    'JP',\n    'JE',\n    'JO',\n    'KZ',\n    'KE',\n    'XK',\n    'KW',\n    'KG',\n    'LA',\n    'LV',\n    'LB',\n    'LS',\n    'LR',\n    'LY',\n    'LI',\n    'LT',\n    'LU',\n    'MO',\n    'MK',\n    'MG',\n    'MW',\n    'MY',\n    'MV',\n    'ML',\n    'MT',\n    'MH',\n    'MQ',\n    'MR',\n    'MU',\n    'YT',\n    'MX',\n    'FM',\n    'MD',\n    'MC',\n    'MN',\n    'ME',\n    'MS',\n    'MA',\n    'MZ',\n    'MM',\n    'NA',\n    'NR',\n    'NP',\n    'NL',\n    'NC',\n    'NZ',\n    'NI',\n    'NE',\n    'NG',\n    'NU',\n    'NF',\n    'KP',\n    'MP',\n    'NO',\n    'OM',\n    'PK',\n    'PW',\n    'PS',\n    'PA',\n    'PG',\n    'PY',\n    'PE',\n    'PH',\n    'PN',\n    'PL',\n    'PT',\n    'PR',\n    'QA',\n    'CG',\n    'RO',\n    'RU',\n    'RW',\n    'RE',\n    'BL',\n    'SH',\n    'KN',\n    'LC',\n    'MF',\n    'PM',\n    'VC',\n    'WS',\n    'SM',\n    'SA',\n    'SN',\n    'RS',\n    'SC',\n    'SL',\n    'SG',\n    'SX',\n    'SK',\n    'SI',\n    'SB',\n    'SO',\n    'ZA',\n    'GS',\n    'KR',\n    'SS',\n    'ES',\n    'LK',\n    'SD',\n    'SR',\n    'SJ',\n    'SE',\n    'CH',\n    'SY',\n    'ST',\n    'TW',\n    'TJ',\n    'TZ',\n    'TH',\n    'TL',\n    'TG',\n    'TK',\n    'TO',\n    'TT',\n    'TN',\n    'TR',\n    'TM',\n    'TC',\n    'TV',\n    'UG',\n    'UA',\n    'AE',\n    'GB',\n    'US',\n    'UM',\n    'VI',\n    'UY',\n    'UZ',\n    'VU',\n    'VA',\n    'VE',\n    'VN',\n    'WF',\n    'EH',\n    'YE',\n    'ZM',\n    'ZW',\n    'KI',\n    'HK',\n    'AX'\n];\nexport const RegionList = [\n    'Africa',\n    'Americas',\n    'Antarctic',\n    'Asia',\n    'Europe',\n    'Oceania'\n];\nexport const SubregionList = [\n    'Southern Asia',\n    'Southern Europe',\n    'Northern Africa',\n    'Polynesia',\n    'Middle Africa',\n    'Caribbean',\n    'South America',\n    'Western Asia',\n    'Australia and New Zealand',\n    'Western Europe',\n    'Eastern Europe',\n    'Central America',\n    'Western Africa',\n    'North America',\n    'Southern Africa',\n    'Eastern Africa',\n    'South-Eastern Asia',\n    'Eastern Asia',\n    'Northern Europe',\n    'Melanesia',\n    'Micronesia',\n    'Central Asia',\n    'Central Europe'\n];\nexport const TranslationLanguageCodeList = [\n    'common',\n    'cym',\n    'deu',\n    'fra',\n    'hrv',\n    'ita',\n    'jpn',\n    'nld',\n    'por',\n    'rus',\n    'spa',\n    'svk',\n    'fin',\n    'zho',\n    'isr',\n    'ara'\n];\nexport var FlagType;\n(function (FlagType) {\n    FlagType[\"FLAT\"] = \"flat\";\n    FlagType[\"EMOJI\"] = \"emoji\";\n})(FlagType || (FlagType = {}));\nexport function isCountryCode(str) {\n    return CountryCodeList.some((code) => code === str);\n}\n//# sourceMappingURL=types.js.map","import { FlagType, CountryCodeList, } from './types';\nimport Fuse from 'fuse.js';\nconst imageJsonUrl = 'https://kanimetov.github.io/react-native-country-picker-modal/countries/';\nconst localData = {\n    emojiCountries: undefined,\n    imageCountries: undefined,\n};\nexport const loadDataAsync = ((data) => (dataType = FlagType.EMOJI) => {\n    return new Promise((resolve, reject) => {\n        switch (dataType) {\n            case FlagType.FLAT:\n                if (!data.imageCountries) {\n                    fetch(imageJsonUrl)\n                        .then((response) => response.json())\n                        .then((remoteData) => {\n                        data.imageCountries = remoteData;\n                        resolve(data.imageCountries);\n                    })\n                        .catch(reject);\n                }\n                else {\n                    resolve(data.imageCountries);\n                }\n                break;\n            default:\n                if (!data.emojiCountries) {\n                    data.emojiCountries = require('./assets/data/countries-emoji.json');\n                    resolve(data.emojiCountries);\n                }\n                else {\n                    resolve(data.emojiCountries);\n                }\n                break;\n        }\n    });\n})(localData);\nexport const getEmojiFlagAsync = async (countryCode = 'FR') => {\n    const countries = await loadDataAsync();\n    if (!countries) {\n        throw new Error('Unable to find emoji because emojiCountries is undefined');\n    }\n    return countries[countryCode].flag;\n};\nexport const getImageFlagAsync = async (countryCode = 'FR') => {\n    const countries = await loadDataAsync(FlagType.FLAT);\n    if (!countries) {\n        throw new Error('Unable to find image because imageCountries is undefined');\n    }\n    return countries[countryCode].flag;\n};\nexport const getCountryNameAsync = async (countryCode = 'FR', translation = 'common') => {\n    const countries = await loadDataAsync();\n    if (!countries) {\n        throw new Error('Unable to find image because imageCountries is undefined');\n    }\n    return countries[countryCode].name\n        ? countries[countryCode].name[translation]\n        : countries[countryCode].name['common'];\n};\nexport const getCountryCallingCodeAsync = async (countryCode) => {\n    const countries = await loadDataAsync();\n    if (!countries) {\n        throw new Error('Unable to find image because imageCountries is undefined');\n    }\n    return countries[countryCode].callingCode[0];\n};\nexport const getCountryCurrencyAsync = async (countryCode) => {\n    const countries = await loadDataAsync();\n    if (!countries) {\n        throw new Error('Unable to find image because imageCountries is undefined');\n    }\n    return countries[countryCode].currency[0];\n};\nconst isCountryPresent = (countries) => (countryCode) => !!countries[countryCode];\nconst isRegion = (region) => (country) => region ? country.region === region : true;\nconst isSubregion = (subregion) => (country) => subregion ? country.subregion === subregion : true;\nconst isIncluded = (countryCodes) => (country) => countryCodes && countryCodes.length > 0\n    ? countryCodes.includes(country.cca2)\n    : true;\nconst isExcluded = (excludeCountries) => (country) => excludeCountries && excludeCountries.length > 0\n    ? !excludeCountries.includes(country.cca2)\n    : true;\nexport const getCountriesAsync = async (flagType, translation = 'common', region, subregion, countryCodes, excludeCountries, preferredCountries, withAlphaFilter) => {\n    const countriesRaw = await loadDataAsync(flagType);\n    if (!countriesRaw) {\n        return [];\n    }\n    if (preferredCountries && !withAlphaFilter) {\n        const newCountryCodeList = [\n            ...preferredCountries,\n            ...CountryCodeList.filter(code => !preferredCountries.includes(code)),\n        ];\n        const countries = newCountryCodeList\n            .filter(isCountryPresent(countriesRaw))\n            .map((cca2) => ({\n            cca2,\n            ...{\n                ...countriesRaw[cca2],\n                name: countriesRaw[cca2].name[translation] ||\n                    countriesRaw[cca2].name['common'],\n            },\n        }))\n            .filter(isRegion(region))\n            .filter(isSubregion(subregion))\n            .filter(isIncluded(countryCodes))\n            .filter(isExcluded(excludeCountries));\n        return countries;\n    }\n    else {\n        const countries = CountryCodeList.filter(isCountryPresent(countriesRaw))\n            .map((cca2) => ({\n            cca2,\n            ...{\n                ...countriesRaw[cca2],\n                name: countriesRaw[cca2].name[translation] ||\n                    countriesRaw[cca2].name['common'],\n            },\n        }))\n            .filter(isRegion(region))\n            .filter(isSubregion(subregion))\n            .filter(isIncluded(countryCodes))\n            .filter(isExcluded(excludeCountries))\n            .sort((country1, country2) => country1.name.localeCompare(country2.name));\n        return countries;\n    }\n};\nconst DEFAULT_FUSE_OPTION = {\n    shouldSort: true,\n    threshold: 0.3,\n    location: 0,\n    distance: 100,\n    maxPatternLength: 32,\n    minMatchCharLength: 1,\n    keys: ['name', 'cca2', 'callingCode'],\n};\nlet fuse;\nexport const search = (filter = '', data = [], options = DEFAULT_FUSE_OPTION) => {\n    if (data.length === 0) {\n        return [];\n    }\n    if (!fuse) {\n        fuse = new Fuse(data, options);\n    }\n    if (filter && filter !== '') {\n        const result = fuse.search(filter);\n        return result;\n    }\n    else {\n        return data;\n    }\n};\nconst uniq = (arr) => Array.from(new Set(arr));\nexport const getLetters = (countries) => {\n    return uniq(countries\n        .map((country) => country.name.substr(0, 1).toLocaleUpperCase())\n        .sort((l1, l2) => l1.localeCompare(l2)));\n};\nexport const getCountryInfoAsync = async ({ countryCode, translation, }) => {\n    const countryName = await getCountryNameAsync(countryCode, translation || 'common');\n    const currency = await getCountryCurrencyAsync(countryCode);\n    const callingCode = await getCountryCallingCodeAsync(countryCode);\n    return { countryName, currency, callingCode };\n};\n//# sourceMappingURL=CountryService.js.map","import * as React from 'react';\nimport { getEmojiFlagAsync, getImageFlagAsync, getCountryNameAsync, getCountriesAsync, getLetters, getCountryCallingCodeAsync, getCountryCurrencyAsync, getCountryInfoAsync, search, } from './CountryService';\nexport const DEFAULT_COUNTRY_CONTEXT = {\n    translation: 'common',\n    getCountryNameAsync,\n    getImageFlagAsync,\n    getEmojiFlagAsync,\n    getCountriesAsync,\n    getCountryCallingCodeAsync,\n    getCountryCurrencyAsync,\n    search,\n    getLetters,\n    getCountryInfoAsync,\n};\nexport const CountryContext = React.createContext(DEFAULT_COUNTRY_CONTEXT);\nexport const useContext = () => React.useContext(CountryContext);\nexport const { Provider: CountryProvider, Consumer: CountryConsumer, } = CountryContext;\n//# sourceMappingURL=CountryContext.js.map","import { Dimensions, Platform } from 'react-native';\nconst { height } = Dimensions.get('window');\nconst ANDROID_MINUS_HEIGHT = 24;\nconst DEFAULT_HEIGHT = Platform.OS === 'android' ? height - ANDROID_MINUS_HEIGHT : height;\nexport const getHeightPercent = (percentage) => Math.round(DEFAULT_HEIGHT * (percentage / 100));\n//# sourceMappingURL=ratio.js.map","import { createTheming } from '@callstack/react-theme-provider';\nimport { Platform } from 'react-native';\nimport { getHeightPercent } from './ratio';\nexport const DEFAULT_THEME = {\n    primaryColor: '#ccc',\n    primaryColorVariant: '#eee',\n    backgroundColor: '#ffffff',\n    onBackgroundTextColor: '#000000',\n    fontSize: 16,\n    fontFamily: Platform.select({\n        ios: 'System',\n        android: 'Roboto',\n        web: 'Arial'\n    }),\n    filterPlaceholderTextColor: '#aaa',\n    activeOpacity: 0.5,\n    itemHeight: getHeightPercent(7),\n    flagSize: Platform.select({ android: 20, default: 30 }),\n    flagSizeButton: Platform.select({ android: 20, default: 30 })\n};\nexport const DARK_THEME = {\n    ...DEFAULT_THEME,\n    primaryColor: '#222',\n    primaryColorVariant: '#444',\n    backgroundColor: '#000',\n    onBackgroundTextColor: '#fff'\n};\nconst { ThemeProvider, useTheme } = createTheming(DEFAULT_THEME);\nexport { ThemeProvider, useTheme };\n//# sourceMappingURL=CountryTheme.js.map","import * as React from 'react';\nimport { Animated, Dimensions, StyleSheet } from 'react-native';\nconst { height } = Dimensions.get('window');\nconst duration = 300;\nconst useNativeDriver = true;\nexport const AnimatedModal = ({ children, visible }) => {\n    const translateY = new Animated.Value(height);\n    const showModal = Animated.timing(translateY, {\n        toValue: 0,\n        duration,\n        useNativeDriver,\n    }).start;\n    const hideModal = Animated.timing(translateY, {\n        toValue: height,\n        duration,\n        useNativeDriver,\n    }).start;\n    React.useEffect(() => {\n        if (visible) {\n            showModal();\n        }\n        else {\n            hideModal();\n        }\n    }, [visible]);\n    return (React.createElement(Animated.View, { style: {\n            ...StyleSheet.absoluteFillObject,\n            transform: [{ translateY }],\n            zIndex: 99,\n        } }, children));\n};\nAnimatedModal.defaultProps = {\n    visible: false,\n};\n//# sourceMappingURL=AnimatedModal.js.map","import * as React from 'react';\nexport const CountryModalContext = React.createContext({\n    gate: undefined,\n    teleport: undefined,\n});\nexport const CountryModalProvider = ({ children }) => {\n    const [gate, setGate] = React.useState(undefined);\n    const teleport = (element) => setGate(element);\n    return (React.createElement(CountryModalContext.Provider, { value: { gate, teleport } },\n        children,\n        gate));\n};\n//# sourceMappingURL=CountryModalProvider.js.map","import * as React from 'react';\nimport { SafeAreaView, StyleSheet, Platform } from 'react-native';\nimport { AnimatedModal } from './AnimatedModal';\nimport { Modal } from './Modal';\nimport { useTheme } from './CountryTheme';\nimport { CountryModalContext } from './CountryModalProvider';\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n});\nexport const CountryModal = ({ children, withModal, disableNativeModal, ...props }) => {\n    const { backgroundColor } = useTheme();\n    const { teleport } = React.useContext(CountryModalContext);\n    const content = (React.createElement(SafeAreaView, { style: [styles.container, { backgroundColor }] }, children));\n    React.useEffect(() => {\n        if (disableNativeModal) {\n            teleport(React.createElement(AnimatedModal, Object.assign({}, props), content));\n        }\n    }, [disableNativeModal]);\n    if (withModal) {\n        if (Platform.OS === 'web') {\n            return React.createElement(Modal, Object.assign({}, props), content);\n        }\n        if (disableNativeModal) {\n            return null;\n        }\n        return React.createElement(Modal, Object.assign({}, props), content);\n    }\n    return content;\n};\nCountryModal.defaultProps = {\n    animationType: 'slide',\n    animated: true,\n    withModal: true,\n    disableNativeModal: false,\n};\n//# sourceMappingURL=CountryModal.js.map","import React from 'react';\nimport { Image, TouchableNativeFeedback, View, Platform, TouchableOpacity, StyleSheet } from 'react-native';\nimport PropTypes from 'prop-types';\nimport { useTheme } from './CountryTheme';\nconst styles = StyleSheet.create({\n    container: {\n        height: 48,\n        width: '15%',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    imageStyle: {\n        height: 25,\n        width: 25,\n        resizeMode: 'contain'\n    }\n});\nconst CloseButtonAndroid = (props) => {\n    let closeImage = require('./assets/images/close.android.png');\n    if (props.image) {\n        closeImage = props.image;\n    }\n    const { onBackgroundTextColor } = useTheme();\n    return (React.createElement(View, { style: [styles.container, props.style] },\n        React.createElement(TouchableNativeFeedback, { background: Platform.Version < 21\n                ? TouchableNativeFeedback.SelectableBackground()\n                : TouchableNativeFeedback.SelectableBackgroundBorderless(), onPress: props.onPress },\n            React.createElement(View, null,\n                React.createElement(Image, { source: closeImage, style: [\n                        styles.imageStyle,\n                        props.imageStyle,\n                        { tintColor: onBackgroundTextColor }\n                    ] })))));\n};\nconst CloseButtonIOS = (props) => {\n    let closeImage = require('./assets/images/close.ios.png');\n    if (props.image) {\n        closeImage = props.image;\n    }\n    const { onBackgroundTextColor } = useTheme();\n    return (React.createElement(View, { style: [styles.container, props.style] },\n        React.createElement(TouchableOpacity, { onPress: props.onPress },\n            React.createElement(Image, { source: closeImage, style: [\n                    styles.imageStyle,\n                    props.imageStyle,\n                    { tintColor: onBackgroundTextColor }\n                ] }))));\n};\nconst propTypes = {\n    onPress: PropTypes.func,\n    image: PropTypes.any\n};\nCloseButtonIOS.prototype = propTypes;\nCloseButtonAndroid.prototype = propTypes;\nexport default Platform.select({\n    ios: CloseButtonIOS,\n    android: CloseButtonAndroid,\n    web: CloseButtonIOS\n});\n//# sourceMappingURL=CloseButton.js.map","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport CloseButton from './CloseButton';\nconst styles = StyleSheet.create({\n    container: {\n        flexDirection: 'row',\n        alignItems: 'center'\n    }\n});\nexport const HeaderModal = (props) => {\n    const { withFilter, withCloseButton, closeButtonImage, closeButtonStyle, closeButtonImageStyle, onClose, renderFilter } = props;\n    return (React.createElement(View, { style: styles.container },\n        withCloseButton && React.createElement(CloseButton, { image: closeButtonImage, style: closeButtonStyle, imageStyle: closeButtonImageStyle, onPress: onClose }),\n        withFilter && renderFilter(props)));\n};\nHeaderModal.defaultProps = {\n    withCloseButton: true\n};\n//# sourceMappingURL=HeaderModal.js.map","import React from 'react';\nimport { TextInput, StyleSheet, Platform } from 'react-native';\nimport { useTheme } from './CountryTheme';\nconst styles = StyleSheet.create({\n    input: {\n        height: 48,\n        width: '70%',\n        ...Platform.select({\n            web: {\n                outlineWidth: 0,\n                outlineColor: 'transparent',\n                outlineOffset: 0,\n            },\n        }),\n    },\n});\nexport const CountryFilter = (props) => {\n    const { filterPlaceholderTextColor, fontFamily, fontSize, onBackgroundTextColor, } = useTheme();\n    return (React.createElement(TextInput, Object.assign({ testID: 'text-input-country-filter', autoCorrect: false, placeholderTextColor: filterPlaceholderTextColor, style: [\n            styles.input,\n            { fontFamily, fontSize, color: onBackgroundTextColor },\n        ] }, props)));\n};\nCountryFilter.defaultProps = {\n    autoFocus: false,\n    placeholder: 'Enter country name',\n};\n//# sourceMappingURL=CountryFilter.js.map","import React, { memo } from 'react';\nimport { Text } from 'react-native';\nimport nodeEmoji from 'node-emoji';\nconst Emoji = memo(({ name }) => {\n    const emoji = nodeEmoji.get(name);\n    return React.createElement(Text, { allowFontScaling: false }, emoji);\n});\nexport { Emoji };\n//# sourceMappingURL=Emoji.js.map","import React, { memo } from 'react';\nimport { Emoji } from './Emoji';\nimport { useContext } from './CountryContext';\nimport { useAsync } from 'react-async-hook';\nimport { Image, StyleSheet, PixelRatio, Text, View, ActivityIndicator, } from 'react-native';\nconst styles = StyleSheet.create({\n    container: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: 30,\n        marginRight: 10,\n    },\n    emojiFlag: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderWidth: 1 / PixelRatio.get(),\n        borderColor: 'transparent',\n        backgroundColor: 'transparent',\n    },\n    imageFlag: {\n        resizeMode: 'contain',\n        width: 25,\n        height: 19,\n        borderWidth: 1 / PixelRatio.get(),\n        opacity: 0.8,\n    },\n});\nconst ImageFlag = memo(({ countryCode, flagSize }) => {\n    const { getImageFlagAsync } = useContext();\n    const asyncResult = useAsync(getImageFlagAsync, [countryCode]);\n    if (asyncResult.loading) {\n        return React.createElement(ActivityIndicator, { size: 'small' });\n    }\n    return (React.createElement(Image, { resizeMode: 'contain', style: [\n            styles.imageFlag,\n            { borderColor: 'transparent', height: flagSize },\n        ], source: { uri: asyncResult.result } }));\n});\nconst EmojiFlag = memo(({ countryCode, flagSize }) => {\n    const { getEmojiFlagAsync } = useContext();\n    const asyncResult = useAsync(getEmojiFlagAsync, [countryCode]);\n    if (asyncResult.loading) {\n        return React.createElement(ActivityIndicator, { size: 'small' });\n    }\n    return (React.createElement(Text, { style: [styles.emojiFlag, { fontSize: flagSize }], allowFontScaling: false },\n        React.createElement(Emoji, Object.assign({}, { name: asyncResult.result }))));\n});\nexport const Flag = ({ countryCode, withEmoji, withFlagButton, flagSize, }) => withFlagButton ? (React.createElement(View, { style: styles.container }, withEmoji ? (React.createElement(EmojiFlag, Object.assign({}, { countryCode, flagSize }))) : (React.createElement(ImageFlag, Object.assign({}, { countryCode, flagSize }))))) : null;\nFlag.defaultProps = {\n    withEmoji: true,\n    withFlagButton: true,\n};\n//# sourceMappingURL=Flag.js.map","import React from 'react';\nimport { Text } from 'react-native';\nimport { useTheme } from './CountryTheme';\nexport const CountryText = (props) => {\n    const { fontFamily, fontSize, onBackgroundTextColor } = useTheme();\n    return (React.createElement(Text, Object.assign({}, props, { style: { fontFamily, fontSize, color: onBackgroundTextColor } })));\n};\n//# sourceMappingURL=CountryText.js.map","import React, { useState, useEffect, memo } from 'react';\nimport { TouchableOpacity, StyleSheet, View, } from 'react-native';\nimport { Flag } from './Flag';\nimport { useContext } from './CountryContext';\nimport { CountryText } from './CountryText';\nimport { useTheme } from './CountryTheme';\nconst styles = StyleSheet.create({\n    container: {\n        alignItems: 'flex-start',\n        justifyContent: 'flex-start',\n    },\n    containerWithEmoji: {\n        marginTop: 0,\n    },\n    containerWithoutEmoji: {\n        marginTop: 5,\n    },\n    flagWithSomethingContainer: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        alignItems: 'center',\n    },\n    something: { fontSize: 16 },\n});\nconst FlagText = (props) => (React.createElement(CountryText, Object.assign({}, props, { style: styles.something })));\nconst FlagWithSomething = memo(({ allowFontScaling, countryCode, withEmoji, withCountryNameButton, withCurrencyButton, withCallingCodeButton, withFlagButton, flagSize, placeholder, }) => {\n    const { translation, getCountryInfoAsync } = useContext();\n    const [state, setState] = useState({\n        countryName: '',\n        currency: '',\n        callingCode: '',\n    });\n    const { countryName, currency, callingCode } = state;\n    useEffect(() => {\n        if (countryCode) {\n            getCountryInfoAsync({ countryCode, translation })\n                .then(setState)\n                .catch(console.warn);\n        }\n    }, [\n        countryCode,\n        withCountryNameButton,\n        withCurrencyButton,\n        withCallingCodeButton,\n    ]);\n    return (React.createElement(View, { style: styles.flagWithSomethingContainer },\n        countryCode ? (React.createElement(Flag, Object.assign({}, { withEmoji, countryCode, withFlagButton, flagSize: flagSize }))) : (React.createElement(FlagText, { allowFontScaling: allowFontScaling }, placeholder)),\n        withCountryNameButton && countryName ? (React.createElement(FlagText, { allowFontScaling: allowFontScaling }, countryName + ' ')) : null,\n        withCurrencyButton && currency ? (React.createElement(FlagText, { allowFontScaling: allowFontScaling }, `(${currency}) `)) : null,\n        withCallingCodeButton && callingCode ? (React.createElement(FlagText, { allowFontScaling: allowFontScaling }, `+${callingCode}`)) : null));\n});\nexport const FlagButton = ({ allowFontScaling, withEmoji, withCountryNameButton, withCallingCodeButton, withCurrencyButton, withFlagButton, countryCode, containerButtonStyle, onOpen, placeholder, }) => {\n    const { flagSizeButton: flagSize } = useTheme();\n    return (React.createElement(TouchableOpacity, { activeOpacity: 0.7, onPress: onOpen },\n        React.createElement(View, { style: [\n                styles.container,\n                withEmoji ? styles.containerWithEmoji : styles.containerWithoutEmoji,\n                containerButtonStyle,\n            ] },\n            React.createElement(FlagWithSomething, Object.assign({}, {\n                allowFontScaling,\n                countryCode,\n                withEmoji,\n                withCountryNameButton,\n                withCallingCodeButton,\n                withCurrencyButton,\n                withFlagButton,\n                flagSize: flagSize,\n                placeholder,\n            })))));\n};\nFlagButton.defaultProps = {\n    withEmoji: true,\n    withCountryNameButton: false,\n    withCallingCodeButton: false,\n    withCurrencyButton: false,\n    withFlagButton: true,\n};\n//# sourceMappingURL=FlagButton.js.map","import React, { useRef, memo, useState, useEffect } from 'react';\nimport { StyleSheet, View, FlatList, ScrollView, TouchableOpacity, PixelRatio, Dimensions, } from 'react-native';\nimport { useTheme } from './CountryTheme';\nimport { Flag } from './Flag';\nimport { useContext } from './CountryContext';\nimport { CountryText } from './CountryText';\nconst borderBottomWidth = 2 / PixelRatio.get();\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    letters: {\n        marginRight: 10,\n        backgroundColor: 'transparent',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    letter: {\n        height: 23,\n        width: 20,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    letterText: {\n        textAlign: 'center',\n    },\n    itemCountry: {\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        paddingHorizontal: 5,\n    },\n    itemCountryName: {\n        width: '90%',\n    },\n    list: {\n        flex: 1,\n    },\n    sep: {\n        borderBottomWidth,\n        width: '100%',\n    },\n});\nconst Letter = ({ letter, scrollTo }) => {\n    const { fontSize, activeOpacity } = useTheme();\n    return (React.createElement(TouchableOpacity, Object.assign({ testID: `letter-${letter}`, key: letter, onPress: () => scrollTo(letter) }, { activeOpacity }),\n        React.createElement(View, { style: styles.letter },\n            React.createElement(CountryText, { style: [styles.letterText, { fontSize: fontSize * 0.8 }] }, letter))));\n};\nconst CountryItem = (props) => {\n    const { activeOpacity, itemHeight, flagSize } = useTheme();\n    const { country, onSelect, withFlag, withEmoji, withCallingCode, withCurrency, } = props;\n    const extraContent = [];\n    if (withCallingCode &&\n        country.callingCode &&\n        country.callingCode.length > 0) {\n        extraContent.push(`+${country.callingCode.join('|')}`);\n    }\n    if (withCurrency && country.currency && country.currency.length > 0) {\n        extraContent.push(country.currency.join('|'));\n    }\n    return (React.createElement(TouchableOpacity, Object.assign({ key: country.cca2, testID: `country-selector-${country.cca2}`, onPress: () => onSelect(country) }, { activeOpacity }),\n        React.createElement(View, { style: [styles.itemCountry, { height: itemHeight }] },\n            withFlag && (React.createElement(Flag, Object.assign({}, { withEmoji, countryCode: country.cca2, flagSize: flagSize }))),\n            React.createElement(View, { style: styles.itemCountryName },\n                React.createElement(CountryText, { numberOfLines: 2, ellipsizeMode: 'tail' },\n                    country.name,\n                    extraContent.length > 0 && ` (${extraContent.join(', ')})`)))));\n};\nCountryItem.defaultProps = {\n    withFlag: true,\n    withCallingCode: false,\n};\nconst MemoCountryItem = memo(CountryItem);\nconst renderItem = (props) => ({ item: country, }) => (React.createElement(MemoCountryItem, Object.assign({}, { country, ...props })));\nconst keyExtractor = (item) => item.cca2;\nconst ItemSeparatorComponent = () => {\n    const { primaryColorVariant } = useTheme();\n    return (React.createElement(View, { style: [styles.sep, { borderBottomColor: primaryColorVariant }] }));\n};\nconst { height } = Dimensions.get('window');\nexport const CountryList = (props) => {\n    const { data, withAlphaFilter, withEmoji, withFlag, withCallingCode, withCurrency, onSelect, filter, flatListProps, filterFocus, } = props;\n    const flatListRef = useRef(null);\n    const [letter, setLetter] = useState('');\n    const { itemHeight, backgroundColor } = useTheme();\n    const indexLetter = data\n        .map((country) => country.name.substr(0, 1))\n        .join('');\n    const scrollTo = (letter, animated = true) => {\n        const index = indexLetter.indexOf(letter);\n        setLetter(letter);\n        if (flatListRef.current) {\n            flatListRef.current.scrollToIndex({ animated, index });\n        }\n    };\n    const onScrollToIndexFailed = (_info) => {\n        if (flatListRef.current) {\n            flatListRef.current.scrollToEnd();\n            scrollTo(letter);\n        }\n    };\n    const { search, getLetters } = useContext();\n    const letters = getLetters(data);\n    useEffect(() => {\n        if (data && data.length > 0 && filterFocus && !filter) {\n            scrollTo(letters[0], false);\n        }\n    }, [filterFocus]);\n    const initialNumToRender = Math.round(height / (itemHeight || 1));\n    return (React.createElement(View, { style: [styles.container, { backgroundColor }] },\n        React.createElement(FlatList, Object.assign({ onScrollToIndexFailed: true, ref: flatListRef, testID: 'list-countries', keyboardShouldPersistTaps: 'handled', automaticallyAdjustContentInsets: false, scrollEventThrottle: 1, getItemLayout: (_data, index) => ({\n                length: itemHeight + borderBottomWidth,\n                offset: (itemHeight + borderBottomWidth) * index,\n                index,\n            }), renderItem: renderItem({\n                withEmoji,\n                withFlag,\n                withCallingCode,\n                withCurrency,\n                onSelect,\n            }) }, {\n            data: search(filter, data),\n            keyExtractor,\n            onScrollToIndexFailed,\n            ItemSeparatorComponent,\n            initialNumToRender,\n        }, flatListProps)),\n        withAlphaFilter && (React.createElement(ScrollView, { contentContainerStyle: styles.letters, keyboardShouldPersistTaps: 'always' }, letters.map((letter) => (React.createElement(Letter, Object.assign({ key: letter }, { letter, scrollTo }))))))));\n};\nCountryList.defaultProps = {\n    filterFocus: undefined,\n};\n//# sourceMappingURL=CountryList.js.map","import React, { useState, useEffect } from 'react';\nimport { CountryModal } from './CountryModal';\nimport { HeaderModal } from './HeaderModal';\nimport { FlagType } from './types';\nimport { CountryFilter } from './CountryFilter';\nimport { FlagButton } from './FlagButton';\nimport { useContext } from './CountryContext';\nimport { CountryList } from './CountryList';\nconst renderFlagButton = (props) => props.renderFlagButton ? (props.renderFlagButton(props)) : (React.createElement(FlagButton, Object.assign({}, props)));\nconst renderFilter = (props) => props.renderCountryFilter ? (props.renderCountryFilter(props)) : (React.createElement(CountryFilter, Object.assign({}, props)));\nexport const CountryPicker = (props) => {\n    const { allowFontScaling, countryCode, region, subregion, countryCodes, renderFlagButton: renderButton, renderCountryFilter, filterProps, modalProps, flatListProps, onSelect, withEmoji, withFilter, withCloseButton, withCountryNameButton, withCallingCodeButton, withCurrencyButton, containerButtonStyle, withAlphaFilter, withCallingCode, withCurrency, withFlag, withModal, disableNativeModal, withFlagButton, onClose: handleClose, onOpen: handleOpen, closeButtonImage, closeButtonStyle, closeButtonImageStyle, excludeCountries, placeholder, preferredCountries, } = props;\n    const [state, setState] = useState({\n        visible: props.visible || false,\n        countries: [],\n        filter: '',\n        filterFocus: false,\n    });\n    const { translation, getCountriesAsync } = useContext();\n    const { visible, filter, countries, filterFocus } = state;\n    useEffect(() => {\n        if (state.visible !== props.visible) {\n            setState({ ...state, visible: props.visible || false });\n        }\n    }, [props.visible]);\n    const onOpen = () => {\n        setState({ ...state, visible: true });\n        if (handleOpen) {\n            handleOpen();\n        }\n    };\n    const onClose = () => {\n        setState({ ...state, filter: '', visible: false });\n        if (handleClose) {\n            handleClose();\n        }\n    };\n    const setFilter = (filter) => setState({ ...state, filter });\n    const setCountries = (countries) => setState({ ...state, countries });\n    const onSelectClose = (country) => {\n        onSelect(country);\n        onClose();\n    };\n    const onFocus = () => setState({ ...state, filterFocus: true });\n    const onBlur = () => setState({ ...state, filterFocus: false });\n    const flagProp = {\n        allowFontScaling,\n        countryCode,\n        withEmoji,\n        withCountryNameButton,\n        withCallingCodeButton,\n        withCurrencyButton,\n        withFlagButton,\n        renderFlagButton: renderButton,\n        onOpen,\n        containerButtonStyle,\n        placeholder,\n    };\n    useEffect(() => {\n        let cancel = false;\n        getCountriesAsync(withEmoji ? FlagType.EMOJI : FlagType.FLAT, translation, region, subregion, countryCodes, excludeCountries, preferredCountries, withAlphaFilter)\n            .then(countries => (cancel ? null : setCountries(countries)))\n            .catch(console.warn);\n        return () => {\n            cancel = true;\n        };\n    }, [translation, withEmoji]);\n    return (React.createElement(React.Fragment, null,\n        withModal && renderFlagButton(flagProp),\n        React.createElement(CountryModal, Object.assign({}, { visible, withModal, disableNativeModal, ...modalProps }, { onRequestClose: onClose, onDismiss: onClose }),\n            React.createElement(HeaderModal, Object.assign({}, {\n                withFilter,\n                onClose,\n                closeButtonImage,\n                closeButtonImageStyle,\n                closeButtonStyle,\n                withCloseButton,\n            }, { renderFilter: (props) => renderFilter({\n                    ...props,\n                    allowFontScaling,\n                    renderCountryFilter,\n                    onChangeText: setFilter,\n                    value: filter,\n                    onFocus,\n                    onBlur,\n                    ...filterProps,\n                }) })),\n            React.createElement(CountryList, Object.assign({}, {\n                onSelect: onSelectClose,\n                data: countries,\n                letters: [],\n                withAlphaFilter: withAlphaFilter && filter === '',\n                withCallingCode,\n                withCurrency,\n                withFlag,\n                withEmoji,\n                filter,\n                filterFocus,\n                flatListProps,\n            })))));\n};\nCountryPicker.defaultProps = {\n    withModal: true,\n    withAlphaFilter: false,\n    withCallingCode: false,\n    placeholder: 'Select Country',\n    allowFontScaling: true,\n};\n//# sourceMappingURL=CountryPicker.js.map","import React from 'react';\nimport { CountryProvider, DEFAULT_COUNTRY_CONTEXT } from './CountryContext';\nimport { ThemeProvider, DEFAULT_THEME } from './CountryTheme';\nimport { CountryPicker } from './CountryPicker';\nconst Main = ({ theme, translation, ...props }) => {\n    return (React.createElement(ThemeProvider, { theme: { ...DEFAULT_THEME, ...theme } },\n        React.createElement(CountryProvider, { value: { ...DEFAULT_COUNTRY_CONTEXT, translation } },\n            React.createElement(CountryPicker, Object.assign({}, props)))));\n};\nMain.defaultProps = {\n    onSelect: () => { },\n    withEmoji: true,\n};\nexport default Main;\nexport { getCountriesAsync as getAllCountries, getCountryCallingCodeAsync as getCallingCode, } from './CountryService';\nexport { CountryModal } from './CountryModal';\nexport { DARK_THEME, DEFAULT_THEME } from './CountryTheme';\nexport { CountryFilter } from './CountryFilter';\nexport { CountryList } from './CountryList';\nexport { FlagButton } from './FlagButton';\nexport { Flag } from './Flag';\nexport { HeaderModal } from './HeaderModal';\nexport { CountryModalProvider } from './CountryModalProvider';\nexport * from './types';\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}